************************
elbe-initvm
************************

.. __name:

NAME
====

elbe-initvm - High Level Interface to the ELBE System. Allows to create
an initvm and directly build Rootfilesystems using ELBE.

.. __synopsis:

SYNOPSIS
========

   ::

      elbe initvm [options] attach
      elbe initvm [options] create [<xmlfile> | <isoimage>]
      elbe initvm [options] submit [<xmlfile> | <isoimage>]
      elbe initvm [options] start
      elbe initvm [options] stop
      elbe initvm [options] ensure
      elbe initvm [options] start_build

.. __description:

DESCRIPTION
===========

This command allows to build and manage an initvm. It makes use of the
tmux Terminal multiplexer.

.. __options:

OPTIONS
=======

--directory <dir>
   Directory where the initvm resides, or is supposed to reside.
   (Defaults to *./build*)

--skip-download
   After the build has finished, the generated Files are downloaded from
   the initvm to the host. This step is skipped, when this option is
   specified.

--output <dir>
   Directoryname where the generated and downloaded Files should be
   saved. The default is to generate a directory with a timestamp in the
   current working directory.

--user <username>
   Username to use for login (defaults to root).

--pass <password>
   Password for login (defaults to *foo*).

--retries <N>
   How many times to retry the connection to the server before giving up
   (default is 10 times, yielding 10 seconds).

--skip-build-bin
   Skip building binary repository CDROM, for exact reproduction.

--skip-build-sources
   Skip building source CDROM.

--output <directory>
   Output downloaded files to <directory>.

--keep-files
   donâ€™t delete elbe project files after a build in the initvm use *elbe
   control list_projects* to get a list of available projects

.. __commands:

COMMANDS
========

*attach*
   Attach to the initvm running in a Background tmux session. When tmux
   is being used, it links the initvm window into the current tmux
   session. If tmux is not used, tmux is started and the Background
   session is attached.

*create* [ <xmlfile> \| <isoimage> ]
   This command triggers a complete rebuild of the Elbe XML File. it
   also includes rebuilding the initvm.

   If an initvm is already available, you should use the *submit*
   command, to build a project in an existing initvm.

   Note that only a single initvm can be running on your host.

   When a iso Image with the binaries has been built earlier, it can
   also be used to recreate the original image. The source.xml from the
   iso will be used, and all the binary packages available also.

*submit* [ <xmlfile> \| <isoimage> ]
   This command triggers a complete rebuild of the Elbe XML File. It
   will however use an existing initvm.

   When a iso Image with the binaries has been built earlier, it can
   also be used to recreate the original image. The source.xml from the
   iso will be used, and all the binary packages available also.

*start*
   Start initvm in the Background.

*stop*
   Shutdown running initvm.

*ensure*
   Make sure an initvm is running in the Background.

*start_build*
   Runs an initvm build in the Background. The build directory must have
   been created with ``elbe init`` beforehand.

.. __examples:

Examples
========

-  Build an initvm and on that build an elbe example:

   ::

      $ elbe initvm create /usr/share/doc/elbe-doc/examples/rescue.xml

-  Reuse the initvm built in the previous Step to build another example
   xml

   ::

      $ elbe initvm submit /usr/share/doc/elbe-doc/examples/elbe-desktop.xml

.. __see_also:

SEE ALSO
========

elbe-control1 tmux1

.. __elbe:

ELBE
====

Part of the elbe1 suite
